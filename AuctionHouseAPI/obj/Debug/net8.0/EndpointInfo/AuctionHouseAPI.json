{
  "openapi": "3.0.1",
  "info": {
    "title": "AuctionHouseAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/Auction": {
      "post": {
        "tags": [
          "Auction"
        ],
        "summary": "Create new auction",
        "description": "This endpoint takes auction in a form of JSON and parses it to Auction object.\r\n\r\nThen saves the Auction object in the static list\r\n\r\nThen returns status code 201",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Auction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Auction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Successfuly created"
          }
        }
      },
      "delete": {
        "tags": [
          "Auction"
        ],
        "summary": "Delete auction by its id",
        "description": "This endpoint takes id from route\r\n\r\nThen finds the auction in the list by the id\r\n\r\nThen checks if auction with such id exists\r\n\r\nThen deletes the auction from the list",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Auction not found"
          },
          "204": {
            "description": "Successfuly deleted an auction"
          }
        }
      },
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get all auctions",
        "description": "This endpoint returns the list of auctions in its body",
        "responses": {
          "200": {
            "description": "Successfuly fetched auctions",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Auction"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Auction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Auction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Auction/{id}": {
      "put": {
        "tags": [
          "Auction"
        ],
        "summary": "Edit auction by id and new values",
        "description": "This endpoint takes id from the route and JSON of auction and parses it to Auction object\r\n\r\nThen finds the auction in the list by the id\r\n\r\nThen checks if auction with such id exists\r\n\r\nThen replaces the existing object with the one parsed from JSON",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Auction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Auction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Auction not found"
          },
          "204": {
            "description": "Successfuly edited an auction"
          }
        }
      },
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get auction by its id",
        "description": "This endpoint takes id from route\r\n\r\nThen finds the auction in the list by the id\r\n\r\nThen checks if auction with such id exists\r\n\r\nThen returns the auction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly fetched an auction"
          },
          "404": {
            "description": "Auction not found"
          }
        }
      }
    },
    "/api/Auction/item": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get all auction items",
        "description": "This endpoint returns the list of all items ever auctioned",
        "responses": {
          "200": {
            "description": "Successfuly fetched auction items",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuctionItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Auction/{id}/item": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get auction item by auction id",
        "description": "This endpoint takes id from route\r\n\r\nThen finds the auction in the list by the id\r\n\r\nThen checks if auction with such id exists\r\n\r\nThen returns the auction item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly fetched an auction item",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionItem"
                }
              }
            }
          },
          "404": {
            "description": "Auction item not found"
          }
        }
      },
      "put": {
        "tags": [
          "Auction"
        ],
        "summary": "Edit auction item",
        "description": "This endpoint takes id from route and JSON of auction item and parses it to AuctionItem object\r\n\r\nThen finds the auction in the list by the id\r\n\r\nThen checks if auction witch such id exists\r\n\r\nThen replaces the AuctionItem of the Auction with parsed AuctionItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfuly edited an auction item"
          },
          "404": {
            "description": "Auction not found"
          }
        }
      }
    },
    "/api/Auction/{id}/options": {
      "get": {
        "tags": [
          "Auction"
        ],
        "summary": "Get auction options by auction id",
        "description": "This endpoint takes id from route\r\n\r\nThen finds options of an auction with id\r\n\r\nThen checks if auction with such id exists\r\n\r\nThen returns the AuctionOptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly fetched auction options",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionOptions"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionOptions"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionOptions"
                }
              }
            }
          },
          "404": {
            "description": "Auction options not found"
          }
        }
      },
      "put": {
        "tags": [
          "Auction"
        ],
        "summary": "Edit auction options",
        "description": "This endpoint takes id from route and JSON of AuctionOptions and parses it to AuctionOptions object\r\n\r\nThen finds auction in the list by the id\r\n\r\nThen checks if auction with such id exists\r\n\r\nThen replaces existing AuctionOptions object with parsed AuctionOptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Auction not found"
          },
          "204": {
            "description": "Successfuly edited auction options"
          }
        }
      }
    },
    "/api/Bid/auction/{aid}/user/{uid}": {
      "post": {
        "tags": [
          "Bid"
        ],
        "summary": "Places bid on specific auction for a user",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Bid"
        ],
        "summary": "Get all user bids for specific auction",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bid"
        ],
        "summary": "Remove all user bids for specific auction",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bid/auction/{aid}": {
      "get": {
        "tags": [
          "Bid"
        ],
        "summary": "Get all bids for a specific auction",
        "parameters": [
          {
            "name": "aid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Bid/user/{uid}": {
      "get": {
        "tags": [
          "Bid"
        ],
        "summary": "Get all bids for a specific user",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Bid/{id}": {
      "put": {
        "tags": [
          "Bid"
        ],
        "summary": "Change bid amount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Add new category",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Edit category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Auction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "item": {
            "$ref": "#/components/schemas/AuctionItem"
          },
          "options": {
            "$ref": "#/components/schemas/AuctionOptions"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AuctionItem": {
        "type": "object",
        "properties": {
          "auctionId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "customTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuctionOptions": {
        "type": "object",
        "properties": {
          "auctionId": {
            "type": "integer",
            "format": "int32"
          },
          "startingPrice": {
            "type": "number",
            "format": "double"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "finishDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "isIncreamentalOnLastMinuteBid": {
            "type": "boolean"
          },
          "minutesToIncrement": {
            "type": "integer",
            "format": "int32"
          },
          "minimumOutbid": {
            "type": "integer",
            "format": "int32"
          },
          "allowBuyItNow": {
            "type": "boolean"
          },
          "buyItNowPrice": {
            "type": "number",
            "format": "double"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Bid": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "auctionId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "placedDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "joinedDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}